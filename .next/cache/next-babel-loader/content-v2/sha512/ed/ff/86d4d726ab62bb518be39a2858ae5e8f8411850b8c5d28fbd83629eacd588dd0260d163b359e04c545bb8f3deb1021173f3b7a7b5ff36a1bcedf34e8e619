{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manish/Projects/nextjs/next-2/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  console.log(props.meetupData.title);\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.title,\n    address: props.address,\n    description: props.description,\n    image: props.image\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/manish/Projects/nextjs/next-2/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MeetupDetails","props","console","log","meetupData","title","address","description","image"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,UAAN,CAAiBC,KAA7B;AACA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEJ,KAAK,CAACI,KADf;AAEE,IAAA,OAAO,EAAEJ,KAAK,CAACK,OAFjB;AAGE,IAAA,WAAW,EAAEL,KAAK,CAACM,WAHrB;AAIE,IAAA,KAAK,EAAEN,KAAK,CAACO;AAJf;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CAVD;;KAAMR,a;;AAiDN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = (props) => {\n  console.log(props.meetupData.title);\n  return (\n    <MeetupDetail\n      title={props.title}\n      address={props.address}\n      description={props.description}\n      image={props.image}\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://manish1234:manish1234@learning.yemzn.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\n  client.close();\n  return {\n    fallback: false, // list all param id values if false, no need if true\n    paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect(\n    \"mongodb+srv://manish1234:manish1234@learning.yemzn.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const selectedMeetup = await meetupCollection.findOne({_id: ObjectId(meetupId)});\n  console.log(selectedMeetup);\n\n  client.close();\n  return {\n    props: {\n      meetupData: {\n        id: selectedMeetup._id.toString(),\n        title: selectedMeetup.title,\n        description: selectedMeetup.description,\n        image: selectedMeetup.image,\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}