{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/manish/Projects/nextjs/next-2/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport React from \"react\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: \"First meetup\",\n    address: \"Some street 5, some city\",\n    description: \"This is a first meetup\",\n    image: \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/Users/manish/Projects/nextjs/next-2/pages/[meetupId]/index.js"],"names":["React","MeetupDetail","MeetupDetails"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,OAAO,EAAC,0BAFV;AAGE,IAAA,WAAW,EAAC,wBAHd;AAIE,IAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,WADF;AAQD,CATD;;KAAMA,a;;AAyCN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { MongoClient } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = () => {\n  return (\n    <MeetupDetail\n      title=\"First meetup\"\n      address=\"Some street 5, some city\"\n      description=\"This is a first meetup\"\n      image=\"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\"\n    />\n  );\n};\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect(\n    \"mongodb+srv://manish1234:manish1234@learning.yemzn.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\");\n  const meetups = await meetupCollection.find({}, {_id: 1}).toArray();\n  client.close();\n  return {\n    fallback: false, // list all param id values if false, no need if true\n    paths: meetups.map(meetup => ({params: {meetupId: meetup._id.toString()}}))\n  };\n}\n\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        title: \"First meetup\",\n        address: \"Some street 5, some city\",\n        description: \"This is a first meetup\",\n        image:\n          \"https://upload.wikimedia.org/wikipedia/commons/d/d3/Stadtbild_M%C3%BCnchen.jpg\",\n      },\n    },\n  };\n}\n\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}